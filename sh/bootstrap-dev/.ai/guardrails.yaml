python:
  lint: "ruff check ."
  type: "mypy ."
  test: "pytest -q"
node:
  lint: "npx -y eslint . || npx -y @biomejs/biome check ."
  type: "npx -y tsc --noEmit"
  test: "npm test --silent || pnpm -s test || yarn -s test"
go:
  lint: "golangci-lint run || (go vet ./... && echo 'fallback go vet ok')"
  test: "go test ./..."
rust:
  lint: "cargo clippy --no-deps -q -D warnings || echo 'clippy not installed'"
  test: "cargo test --quiet"
java:
  test: "mvn -q -DskipTests=false test || ./gradlew test"
dotnet:
  test: "dotnet test --nologo --verbosity quiet"
generic:
  shell: "shopt -s globstar nullglob; (command -v shellcheck >/dev/null && shellcheck **/*.sh) || echo 'shellcheck not found'"
  docker: "shopt -s globstar nullglob; (command -v hadolint >/dev/null && hadolint **/Dockerfile* || echo 'hadolint not found')"
  markdown: "(command -v markdownlint >/dev/null && markdownlint . || echo 'markdownlint not found')"

# Pre-commit hook configuration (optional)
# Uncomment and customize the section below to disable specific language packs
# Example: disable Python linting in a Rust-only project
precommit:
  # Disable specific hooks by ID
  disabled_hooks:
    # - lang-lint          # Disable language-specific linting
    # - lang-test-quick     # Disable quick language tests
    # - ai-envelope-local   # Disable AI envelope local checks

  # Disable hooks by language/technology
  disabled_languages:
    # - python              # Disable all Python-related hooks
    # - node                # Disable all Node.js-related hooks
    # - go                  # Disable all Go-related hooks
    # - rust                # Disable all Rust-related hooks
    # - java                # Disable all Java-related hooks
    # - dotnet              # Disable all .NET-related hooks

docs:
  validation:
    enabled: true
    adr:
      required_sections:
        - Title
        - Status
        - Context
        - Decision
        - Consequences
    coe:
      required_sections:
        - Overview
        - Scope
        - Responsibilities
        - Success Metrics
    sprint_plans:
      required_sections:
        - Sprint Overview
        - Goals
        - Deliverables
        - Timeline

  paths:
    adrs: "docs/decisions/"
    coe: "docs/coe/"
    sprints: "docs/sprints/"
