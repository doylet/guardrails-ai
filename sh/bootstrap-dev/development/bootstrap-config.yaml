---
# AI Guardrails Bootstrap Configuration
version: "1.0.0"
name: "ai-guardrails-standard"

# Component definitions
components:
  core:
    name: "Core AI Guardrails"
    required: true
    files:
      - source: ".ai/guardrails.yaml"
        target: ".ai/guardrails.yaml"
        embedded_fallback: true
      - source: ".ai/envelope.json"
        target: ".ai/envelope.json"
        embedded_fallback: true
    post_install:
      - "mkdir -p .ai"

  schemas:
    name: "JSON Schemas"
    depends_on: ["core"]
    files:
      - source: "ai/schemas/copilot_envelope.schema.json"
        target: "ai/schemas/copilot_envelope.schema.json"
        embedded_fallback: true

  scripts:
    name: "Automation Scripts"
    depends_on: ["schemas"]
    optional: true
    files:
      - source: "ai/scripts/check_envelope.py"
        target: "ai/scripts/check_envelope.py"
        permissions: "755"
      - source: "ai/scripts/check_envelope_local.py"
        target: "ai/scripts/check_envelope_local.py"
        permissions: "755"
      - source: "ai/scripts/lang_lint.sh"
        target: "ai/scripts/lang_lint.sh"
        permissions: "755"
      - source: "ai/scripts/lang_test.sh"
        target: "ai/scripts/lang_test.sh"
        permissions: "755"
    post_install:
      - "chmod +x ai/scripts/*.py ai/scripts/*.sh"

  github:
    name: "GitHub Integration"
    optional: true
    environment_specific: true
    files:
      - source: ".github/workflows/ai_guardrails_on_commit.yml"
        target: ".github/workflows/ai_guardrails_on_commit.yml"
        conditions:
          - has_github: true
      - source: ".github/pull_request_template.md"
        target: ".github/pull_request_template.md"
      - source: ".github/chatmodes/blueprint-mode-mod.chatmode.md"
        target: ".github/chatmodes/blueprint-mode-mod.chatmode.md"

  precommit:
    name: "Pre-commit Hooks"
    optional: true
    files:
      - source: ".pre-commit-config.yaml"
        target: ".pre-commit-config.yaml"
        conditions:
          - has_precommit: true

  docs:
    name: "Documentation Templates"
    optional: true
    files:
      - source: "ai/capabilities.md"
        target: "ai/capabilities.md"
      - source: "docs/decisions/ADR-template.md"
        target: "docs/decisions/ADR-template.md"

# Installation profiles
profiles:
  minimal:
    description: "Minimal installation - core only"
    components: ["core", "schemas"]
  
  standard:
    description: "Standard installation"
    components: ["core", "schemas", "scripts", "docs"]
  
  full:
    description: "Full installation with GitHub integration"
    components: ["core", "schemas", "scripts", "github", "precommit", "docs"]
  
  custom:
    description: "Custom installation - user selects components"
    components: []  # Will be selected interactively

# Environment detection
environment_detection:
  has_github:
    check: "test -d .github || git remote -v | grep -q github"
  has_precommit:
    check: "command -v pre-commit >/dev/null"
  has_python:
    check: "command -v python >/dev/null || command -v python3 >/dev/null"
  has_node:
    check: "command -v node >/dev/null && test -f package.json"

# Global settings
settings:
  auto_create_directories: true
  backup_existing_files: true
  validate_templates: true
  update_gitignore: true
  gitignore_entries:
    - ".ai/envelope.json"
    - ".ai/*.local"
