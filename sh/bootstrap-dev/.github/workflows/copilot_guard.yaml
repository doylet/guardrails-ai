name: Copilot Guard

on:
  pull_request:
    types: [opened, edited, synchronize, reopened]

permissions:
  contents: read
  pull-requests: read

jobs:
  envelope:
    name: Envelope & Scope
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ github.token }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install checker deps
        run: |
          python -m pip install --upgrade pip
          pip install jsonschema requests
      - name: Validate JSON envelope & scope
        run: |
          python ai/scripts/check_envelope.py

  quality:
    name: Lint • Types • Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - uses: actions/setup-python@v5
        with: { python-version: "3.11" }
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          # Ensure minimum tooling available even if not pinned
          pip install -q pytest ruff mypy || true
      - name: Ruff (lint)
        run: ruff check . || (echo "::error::ruff failed" && exit 1)
      - name: Mypy (types)
        run: mypy . || (echo "::error::mypy failed" && exit 1)
      - name: Pytest
        run: pytest -q || (echo "::error::pytest failed" && exit 1)

  # Only merge if both checks are green
  required:
    name: All Gates Green
    needs: [envelope, quality]
    runs-on: ubuntu-latest
    steps:
      - run: echo "All required checks have passed."
